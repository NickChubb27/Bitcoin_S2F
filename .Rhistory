install.packages("neuralnet")
# scale the data to [0, 1]
maxs <- apply(traindat, 2, max)
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
sfDat <- sfDat[11:48, ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
setwd("~/Bitcoin")
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
sfDat <- sfDat[11:48, ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod2)$adj.r.squared, digits=4)))
#third model is both ln values
mod3 <- lm(ln.value. ~ SF, data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$SF, sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$SF), col="red")
abline(14.16, 3.508) #line of all data
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod2)$adj.r.squared, digits=4)))
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod3)$adj.r.squared, digits=4)))
#before first halving, ln SF is non stationary
sfDat <- sfDat[11:nrow(sfDat), ]
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
sfDat <- sfDat[11:nrow(sfDat), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ SF, data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$SF, sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$SF), col="red")
abline(14.16, 3.508) #line of all data
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod3)$adj.r.squared, digits=4)))
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
sfDat <- sfDat[11:48, ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
11:48
c(11:14, 17:20)
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11:16, 19:29, 32:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11:16, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11, 13:16, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11:16, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11:12, 14:16, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
# import data
sfDat <- read.csv('sf.csv')
#before first halving, ln SF is non stationary
#sfDat <- sfDat[11:48, ]
sfDat <- sfDat[c(11:16, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod3)$adj.r.squared, digits=4)))
# import data
sfDat <- read.csv('sf.csv')
#this removes early
sfDat <- sfDat[c(11:17, 19:29, 33:48), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508) #line of all data
#shows r^2
legend("bottomright", bty="n", legend=paste("R2 is", format(summary(mod3)$adj.r.squared, digits=4)))
# import data
sfDat <- read.csv('sf.csv')
#all data
sfDat <- sfDat[11:nrow(sfDat), ]
#change market value to numeric
sfDat$market.value <- as.numeric(gsub('\\$|,', '', sfDat$market.value))
#third model is both ln values
mod3 <- lm(ln.value. ~ ln.SF., data = sfDat) # change to use only training data
summary(mod3)
#Does the plot
plot(sfDat$ln.SF., sfDat$ln.value.)
#Adds the line
abline(lm(sfDat$ln.value.~sfDat$ln.SF.), col="red")
abline(14.16, 3.508, col="green") #line of all data
abline(13.91, 3.8, col="blue") #line of pre halving data (without 4 outliers, one was early inserted missing data)
abline(14.05, 3.9, col="pink") #line of pre halving data
